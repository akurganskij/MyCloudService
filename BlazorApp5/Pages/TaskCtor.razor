@page "/constructor"

@using Blazor.Extensions
@using Blazor.Extensions.Canvas
@using Blazor.Extensions.Canvas.Canvas2D
@using BlazorInputFile

<BlazorInputFile.InputFile OnChange="OnChange"/>
<div>
    <BECanvas Width="1100" Height="700" @ref="canvas"/>
</div>
<img hidden src="@imageDataUri" @ref="img"/>



@code {
    private ElementReference img;
    protected BECanvasComponent canvas;
    private Canvas2DContext context;
    private string imageDataUri, status;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            context = await canvas.CreateCanvas2DAsync();
        }
        await context.DrawImageAsync(img, 0, 0);
    }
    async Task OnChange(IFileListEntry[] files)
    {
        var rawFile = files.FirstOrDefault();
        if (rawFile != null)
        {
            var format = "image/jpeg";
            var imageFile = await rawFile.ToImageFileAsync(format, 640, 480);
            var ms = new MemoryStream();
            await imageFile.Data.CopyToAsync(ms);
            imageDataUri = $"data:{format};base64,{Convert.ToBase64String(ms.ToArray())}";

            status = $"Finished loading {ms.Length} bytes from {imageFile.Name}";
        }
    }
}
